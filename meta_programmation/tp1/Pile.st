'From Pharo6.0 of 13 May 2016 [Latest update: #60535] on 6 April 2018 at 8:18:17.195167 am'!Object subclass: #Pile	instanceVariableNames: 'contenu index capacite'	classVariableNames: 'tailleDefaut'	poolDictionaries: ''	category: 'ExosPharo-PileDistrib'!!Pile commentStamp: 'cd 3/8/2017 10:34' prior: 0!Implantation d'une pile en utilisant une collection ordonnée.Internal Representation and Key Implementation Points.    Instance Variables	contenu:		<Collection>	index:		<Integer>	taille:		<Integer>    Implementation Points!!Pile methodsFor: 'printing' stamp: 'cd 3/15/2017 12:27'!printOn: aStream	"Cette méthode est appelée par la méthode printString qui fabrique une représentation du    receveur sous forme de chaîne.	 PrintString est elle-même appelée par les outils de l'environnement, par exemple par la    méthode printIt du Playground."		aStream nextPutAll: 'une Pile, de taille: '.	capacite printOn: aStream.	aStream nextPutAll: ' contenant: '.	index printOn: aStream.	aStream nextPutAll: ' objets : ('.	contenu do: [ :each | each printOn: aStream. aStream space ].	aStream nextPut: $).! !!Pile methodsFor: 'métier' stamp: 'cd 3/8/2017 12:25'!push: anObject	"met anObject dans contenu au bon index si la pile n'est pas pleine"	self isFull		ifFalse: [			index := index + 1.			contenu at: index put: anObject.]		ifTrue: [ self error: 'Impossible d''empiler sur une pile pleine' ]! !!Pile methodsFor: 'métier' stamp: 'cd 3/28/2018 12:53'!isEmpty	^index = 0! !!Pile methodsFor: 'métier' stamp: 'cd 3/28/2018 12:53'!isFull	^index = capacite! !!Pile methodsFor: 'métier' stamp: 'cd 3/28/2018 12:54'!pop	"dépile et rend le sommet de pile si la pile n'est pas vide"	| retour |	self isEmpty		ifFalse: [			retour := contenu at: index.			index := index - 1.			^retour]		ifTrue: [ self error: 'Pile vide, Impossible de dépiler' ]! !!Pile methodsFor: 'métier' stamp: 'cd 3/28/2018 13:06'!size	"donne le nombre d'éléments empilés"	^index		"^contenu count: [ :each | each isNotNil ]"	! !!Pile methodsFor: 'métier' stamp: 'cd 3/28/2018 12:55'!top	"rend le sommet de pile si la pile n'est pas vide, sans dépiler"	self isEmpty		ifFalse: [ ^contenu at: index]		ifTrue: [ self error: 'Rien au sommet d''une pile vide' ]! !!Pile methodsFor: 'métier' stamp: 'cd 3/28/2018 13:22'!grow	| nb oldc |	nb := self size.	oldc := contenu.	capacite := capacite * 2.	contenu := Array new: capacite.	0 to: nb do: [ :i |  self push: (oldc at: i)]	! !!Pile methodsFor: 'métier' stamp: 'cd 3/28/2018 13:01'!capacity	^capacite	! !!Pile methodsFor: 'initialization' stamp: 'cd 3/28/2018 12:53'!initialize: taille	"initialise les attribus d'une pile nouvellement créée"	"la pile est vide quand index = 0"	index := 0.	"la pile est pleine quand index = capacite"	capacite := taille.	"le contenu est représenté par un tableau"	contenu := Array new: capacite.		self assert: (self isEmpty).	! !!Pile methodsFor: 'private' stamp: 'cd 4/5/2018 12:15'!hasBufferEqualTo: contenu1	^contenu = contenu1! !!Pile methodsFor: 'comparing' stamp: 'cd 4/5/2018 12:15'!= unePile	^unePile hasBufferEqualTo: contenu! !!Pile methodsFor: 'enumerating' stamp: 'cd 4/15/2016 10:37'!do: aBlock	"un itérateur pour la classe Pile"	buffer do: aBlock.					! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pile class	instanceVariableNames: ''!!Pile class methodsFor: 'instance creation' stamp: 'cd 3/28/2018 12:56'!initialize	tailleDefaut := 5.! !!Pile class methodsFor: 'instance creation' stamp: 'cd 4/5/2018 12:47'!new: taille	"Ceci est une méthode de class.	Que vaut 'self'? La classe à laquelle a été envoyé le message ...	donc la class Pile ou une de ses sous-classes"		^super new  initialize: taille	! !!Pile class methodsFor: 'instance creation' stamp: 'cd 4/5/2018 12:47'!new	"Ceci est une méthode de class.	Que vaut 'self'? La classe à laquelle a été envoyé le message ...	donc la class Pile ou une de ses sous-classes"		^self new: tailleDefaut	! !!Pile class methodsFor: 'examples' stamp: 'cd 3/28/2018 14:39'!example	"self example" 	"Un exemple de la façon dont on peut utiliser une pile dans un programme"	| p |	p := Pile new.	p push: 33.	p push: 'une chaine'.	p push: 2 @ 3.	p push: 5 factorial.	p push: p isFull.	p pop.	p push: p size.	^p! !Pile initialize!